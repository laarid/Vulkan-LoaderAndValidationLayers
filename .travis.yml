# Build Configuration for Travis CI
# https://travis-ci.org

dist: trusty
sudo: required
language: cpp
services:
- docker

env:
  global:
  - DOCKER_EXEC_ROOT="docker exec --user root test_container"
  - DOCKER_EXEC="docker exec test_container"
  - BINTRAY_USER=laarid
  - BINTRAY_REPO=main
  - BINTRAY_COMPONENT=main
  - BINTRAY_DESC="Debian Vulkan libraries customized for LAARiD"

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
    # Android build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_TARGET=android-23 ANDROID_ABI=armeabi-v7a
    # Linux GCC debug build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=LINUX
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: VULKAN_BUILD_TARGET=LINUX
    # LAARiD builds
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=amd64
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=arm64
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=armel
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=armhf
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=i386
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=mips
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=mips64el
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=mipsel
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=ppc64el
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=s390x
  allow_failures:
    # Android build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_TARGET=android-23 ANDROID_ABI=armeabi-v7a
    # Linux GCC debug build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=LINUX
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: VULKAN_BUILD_TARGET=LINUX

android:
  components:
    - tools
    - platform-tools
    - build-tools-23.0.2
    - android-23

cache:
  directories:
    - external
    - build-android/external

addons:
  apt:
    packages:
    - dpkg-dev

before_install:
  # Install the appropriate Linux packages.
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then sudo apt-get -y install libxkbcommon-dev libwayland-dev libmirclient-dev libxrandr-dev libx11-xcb-dev; fi

  # Install the Android NDK.
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export ARCH=`uname -m`; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then wget http://dl.google.com/android/repository/android-ndk-r13b-linux-${ARCH}.zip; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then unzip -u -q android-ndk-r13b-linux-${ARCH}.zip; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export ANDROID_NDK_HOME=`pwd`/android-ndk-r13b; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export JAVA_HOME="/usr/lib/jvm/java-8-oracle"; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export PATH="$ANDROID_NDK_HOME:$PATH"; fi

  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LAARID" ]]; then \
      docker run --rm --privileged vicamo/binfmt-qemu:latest; \
      cat /proc/sys/fs/binfmt_misc/qemu-*; \
      export JOB_SUITE=$(dpkg-parsechangelog | grep ^Distribution: | awk '{print $2}'); \
      docker run --detach --tty \
        --name test_container \
        --volume ${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}}:${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}} \
        --workdir ${TRAVIS_BUILD_DIR} \
        --add-host dl.bintray.com:$(nslookup dl.bintray.com | grep -m1 -A1 Name: | grep Address: | awk '{print $2}') \
        laarid/devel:${JOB_SUITE}-${JOB_ARCH} \
        /bin/bash; \
    fi

install:
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LAARID" ]]; then \
      ${DOCKER_EXEC_ROOT} chown -R laarid:laarid ${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}}; \
      ${DOCKER_EXEC_ROOT} apt-get update -qq; \
      ${DOCKER_EXEC} \
        mk-build-deps --install --remove \
          --host-arch ${JOB_ARCH} \
          --root-cmd sudo \
          --tool 'apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y --allow-unauthenticated'; \
    fi

script:
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then ./update_external_sources.sh; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then cmake -H. -Bdbuild -DCMAKE_BUILD_TYPE=Debug; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then make -C dbuild; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then pushd build-android; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then ./update_external_sources_android.sh; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then ./android-generate.sh; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then ndk-build APP_ABI=$ANDROID_ABI; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then popd; fi
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LAARID" ]]; then \
      ${DOCKER_EXEC} \
        dpkg-buildpackage --host-arch ${JOB_ARCH} -i -us -uc -b; \
    fi

before_deploy:
- sudo chown -R $(id -u):$(id -g) ${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}}
- |
  cat .bintray.json.in | \
    sed -e "s#@BINTRAY_PACKAGE@#$(dpkg-parsechangelog | grep ^Source: | awk '{print $2}')#g" \
        -e "s#@BINTRAY_USER@#${BINTRAY_USER}#g" \
        -e "s#@BINTRAY_REPO@#${BINTRAY_REPO}#g" \
        -e "s#@BINTRAY_DESC@#${BINTRAY_DESC}#g" \
        -e "s#@GITHUB_REPO@#${TRAVIS_REPO_SLUG}#g" \
        -e "s#@BINTRAY_VERSION@#$(dpkg-parsechangelog | grep ^Version: | awk '{print $2}')#g" \
        -e "s#@BINTRAY_RELEASE_DATE@#$(date -Iseconds --date="$(${DOCKER_EXEC} dpkg-parsechangelog | grep ^Date: | cut -d ' ' -f 2-)")#g" \
        -e "s#@BINTRAY_OUTDIR@#$(dirname ${TRAVIS_BUILD_DIR})#g" \
        -e "s#@BINTRAY_POOLABBR@#$(dpkg-parsechangelog | grep ^Source: | awk '{print $2}' | cut -c1)#g" \
        -e "s#@BINTRAY_SUITE@#${JOB_SUITE}#g" \
        -e "s#@BINTRAY_COMPONENT@#${BINTRAY_COMPONENT}#g" \
        -e "s#@BINTRAY_ARCH@#${JOB_ARCH}#g" | \
    tee bintray.json

deploy:
- provider: bintray
  file: bintray.json
  user: vicamo
  key:
    secure: "DQ4blkLhZt733kHkZwzjwYzFr+gcqY6cri5+whKQpMd+DVJj5kX2zhTI2L+O+eUIsyK6jr/ZD3K4VjB/+wj2Odkvz+wBNMI5YZ5F8lIJ/ltdV8NWcAJap41F1n2Nxk9yJ/G6KkX3lSOG83RlRqgqZKFfJMIlE26fwf24B/je5zzzVozaxZLOM9z//bLofL7izX7gECIQIkUkUweN1HgWSiGerJbYGFWIqf6FwKB2TKV4v4UMJIuZ6hxvN9cTSIYOu43liT9ya8e/8r+YRXraSoasqmqLGqDfJly5gT+mZQla3lNS8CHlqvzxLDEjjIS6WR30kW+hCMAUQxVkatPck+7XgMCjSN2VkkcZDN1TmB0bAKH5MCQX20iPOBEW8vB4zgPRxf+xGna3RqujbujGw7g1pzsIM3CIiXKshV4Y1ZaFXCCnbHKO+kWwcESFBzWuDVB2VjGUTe3hRQ0qO9zLZLfjdyShGLGVI/sn6NzwD8qL589w3KHt5GiEd6zGWDfM1T1GlcHU/T/ILFuX56K3tCXM3X1FsUyixBNbE9BLHp6Jb1hk0h8ooKcx+tKUmYu60j9NHiDApWDnjhhacpSzdH8JTCVeAS1hiukhsM8Vki5vnW4aYyFbpUMBv15jwgWq55DrD4TqUJDIWagFggmzYrmHweayczYwMGvnIrTXiGY="
  on:
    tags: true
    condition: $VULKAN_BUILD_TARGET = LAARID

notifications:
  slack:
    rooms:
    - secure: "nN7ffkraLW+GQZhWSe86gtnXJleSjTjnp35tmpe7uq1IdCy2c9b++oDJh2XrU5ZrRzFWTj0wv4k7ElIMx2teRvTpnnmQ183CxCoO4S0rfENh2JCbTxhJxMeEAE2UdzbJT/A3hpQesY61Ii3c9Uc2i4J1NoSXT84lTCtzIVyxSUtTGnlq98QnNNORBLp2+MOVueOoMlTTGRK1zALWAltsyv2TxGKcxJLfBSzWwu2cKpT9xTQec6WnU29LADy4xib+B8/lyaj17t522CYT7O5GqBfIk14/XV4LY7yZOBie1bJDJ+OS6K4IyHMWJ8drgnPwgKOrydLnPFtDuVb3uIpMNbCl6yd5Snr8w+3V9jqdWF44rgritPQAJkQoU7FD4quHiOHmxE80SWHpC9dFJB0koVZrbxzEtkWmAnqqzyNETxPJPxAm4U/a3vWIO1czW5hKcOVPnlrS9AIX4EBdTGl6VKbMV2ocBGBGu8QsUcPzmvQcXLAPAScrib1gO981jYnTCovQ0WA2TW9E62fxGdYeojZwYBzzZGHuh7yN9fBFKhEGwt94Hr7oN9oyJtEy1LgzURuEfCufFDeBhX/CGvXPIGyVqafgMlKCTXf+tkDmmLh26tGRqrHNNe3RLcZRFcFXSTWAmNTLr/Qf3GrKu4acagYkOQfXQ1tYV6i2Js2cDqI="
