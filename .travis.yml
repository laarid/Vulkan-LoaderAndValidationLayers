# Build Configuration for Travis CI
# https://travis-ci.org

dist: trusty
sudo: required
language: cpp
services:
- docker

env:
  global:
  - DOCKER_EXEC_ROOT="sudo docker exec --interactive --tty --user root test_container"
  - DOCKER_EXEC="sudo docker exec --interactive --tty test_container"
  - DOCKER_EXEC_NOTTY="sudo docker exec test_container"
  - BINTRAY_USER=laarid
  - BINTRAY_REPO=main
  - BINTRAY_COMPONENT=main
  - BINTRAY_DESC="Debian Vulkan libraries customized for LAARiD"

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
    # Android build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_TARGET=android-23 ANDROID_ABI=armeabi-v7a
    # Linux GCC debug build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=LINUX
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: VULKAN_BUILD_TARGET=LINUX
    # LAARiD builds
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=amd64
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=arm64
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=armel
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=armhf
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=i386
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=mips
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=mips64el
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=mipsel
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=ppc64el
    - env: VULKAN_BUILD_TARGET=LAARID JOB_ARCH=s390x
  allow_failures:
    # Android build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_TARGET=android-23 ANDROID_ABI=armeabi-v7a
    # Linux GCC debug build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=LINUX
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: VULKAN_BUILD_TARGET=LINUX

android:
  components:
    - tools
    - platform-tools
    - build-tools-23.0.2
    - android-23

cache:
  directories:
    - external
    - build-android/external

branches:
  only:
  - master
  - release

before_install:
  # Install the appropriate Linux packages.
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then sudo apt-get -y install libxkbcommon-dev libwayland-dev libmirclient-dev libxrandr-dev; fi

  # Install the Android NDK.
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export ARCH=`uname -m`; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then wget http://dl.google.com/android/repository/android-ndk-r13b-linux-${ARCH}.zip; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then unzip -u -q android-ndk-r13b-linux-${ARCH}.zip; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export ANDROID_NDK_HOME=`pwd`/android-ndk-r13b; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export JAVA_HOME="/usr/lib/jvm/java-8-oracle"; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then export PATH="$ANDROID_NDK_HOME:$PATH"; fi

  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LAARID" ]]; then \
      echo "deb http://archive.ubuntu.com/ubuntu/ devel universe" | \
        sudo tee /etc/apt/sources.list.d/devel.list; \
      sudo apt-get update; \
      sudo apt-get install --no-install-recommends binfmt-support qemu-user-static; \
      sudo docker run --detach --interactive --tty \
        --name test_container \
        --volume ${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}}:${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}} \
        --workdir ${TRAVIS_BUILD_DIR} \
        --add-host dl.bintray.com:$(nslookup dl.bintray.com | grep -m1 -A1 Name: | grep Address: | awk '{print $2}') \
        laarid/devel:${JOB_ARCH} \
        /bin/bash; \
    fi

install:
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LAARID" ]]; then \
      ${DOCKER_EXEC_ROOT} apt-get update -qq; \
      ${DOCKER_EXEC} \
        mk-build-deps --install --remove \
          --host-arch ${JOB_ARCH} \
          --root-cmd sudo \
          --tool 'apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y --allow-unauthenticated'; \
    fi

script:
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then ./update_external_sources.sh; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then cmake -H. -Bdbuild -DCMAKE_BUILD_TYPE=Debug; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then make -C dbuild; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then pushd build-android; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then ./update_external_sources_android.sh; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then ./android-generate.sh; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then ndk-build APP_ABI=$ANDROID_ABI; fi
  - if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then popd; fi
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LAARID" ]]; then \
      ${DOCKER_EXEC} \
        dpkg-buildpackage --host-arch ${JOB_ARCH} -i -us -uc -b; \
    fi

before_deploy:
- |
  cat debian/bintray.json.in | \
    sed -e "s#@BINTRAY_PACKAGE@#$(cat debian/control | grep ^Source: | awk '{print $2}')#g" \
        -e "s#@BINTRAY_USER@#${BINTRAY_USER}#g" \
        -e "s#@BINTRAY_REPO@#${BINTRAY_REPO}#g" \
        -e "s#@BINTRAY_DESC@#${BINTRAY_DESC}#g" \
        -e "s#@GITHUB_REPO@#${TRAVIS_REPO_SLUG}#g" \
        -e "s,@BINTRAY_VERSION@,$(cat debian/changelog | head -n 1 | sed 's,.*(\(.*\)).*,\1,'),g" \
        -e "s#@BINTRAY_RELEASE_DATE@#$(cat debian/changelog | grep -m 1 '^ -- ' | sed 's,^.*  ,,')#g" \
        -e "s#@BINTRAY_OUTDIR@#$(dirname ${TRAVIS_BUILD_DIR})#g" \
        -e "s#@BINTRAY_POOLABBR@#$(cat debian/control | grep ^Source: | awk '{print $2}' | cut -c1)#g" \
        -e "s#@BINTRAY_SUITE@#$(${DOCKER_EXEC_NOTTY} cat /etc/apt/sources.list | grep -m 1 '^deb ' | awk '{print $3}')#g" \
        -e "s#@BINTRAY_COMPONENT@#${BINTRAY_COMPONENT}#g" \
        -e "s#@BINTRAY_ARCH@#${JOB_ARCH}#g" | \
    tee debian/bintray.json

deploy:
- provider: bintray
  file: debian/bintray.json
  user: vicamo
  key:
    secure: "KE/nXCrjQKEXCZrwclLXDBzPjKyKyJe6oBz3c4LKRK3t0zx8iHUNm43H+H3YAUOQR85M/KhCCSYYrzsFZgehitzIuMGyMx7XjsUqzmjY3yPyH+06nhmvnRdB4pG+IzWb3UAkU0e6qyr0AYzMtF8aDo6SRbNlk+Gf7fc5OBIL8eHtJSnEG5wX2UJjA0oiDcl+n9x8cJtx1Zl6j3ltzetEMnZoBRS2H4XD3sk7Jp6nmEmnclJOOubE6J5JXIwwsJ1bidnLiTJ88tHmGbhZ3NOLF0V4I7xaF4V9/qcQjmIYCr1LoVgR90gF52VXlgoZ3Cl7WFYVC0DJiSoU1+iNS0ZLMSdOt4YDQ3w3IbI5VTWcKFEPstbn9Kw0ncCfMROr+/Y+/vSWrSwH+i1aDbwu9niFSF34AjAhY7ntg/inorinYzMFNs8KZWL9r+nyv4acdWZr1fxn/F+V6nC8n65mHBfjMvKQ6qD1hTzWbpU3zZ1lBgalV4Wa494f+QsWVQcmCm3FNKSRSoAzDEaa4zkRdKIHkG50zqtPztrm5bMdNT2v4a6tqo6bDI9l2mpKkIA49k9VnudBs4/H5CnxBTlV8JBQG6wBnmB20p7CarMQdTyI+pa6BhTSWtcPV4FlPt/w53mMpjVSfn9wOzNWJ4nk7T5FF2UjYRQt81QNRtW7eZdjebU="
  on:
    branch: release
    condition: $VULKAN_BUILD_TARGET = LAARID

notifications:
  slack:
    rooms:
    - secure: "K/mqeMNjhHmbys+muIl8u1Eo5QSwCS9RmW+Z5l4J6qjhjfrh6hASvhptgVH7+SUqc7hWnIzqeAzpCw7SuGGmySu7uMpo4Yhsv8kQkGKPNA1cQLuRa7Erpb1KpyDdcw09WZ8PXEaT0xbIXv/urZIUrLLcroBHjh6jfhh53BLDArW5BDigZw8FJnqmcj8t78oacigF8IDcJYufFnR9+GkjCf8YTPqLNahjt6rKL3XVA0kEFXEh3vi8mnPvHtxNng2qcfCncQ5UgPIgBjej/fPSDkxRGRlZsGNgRXWLOoYXqsk1EcE2tov5nfM+arzQYuB7oeR7vh1ZNR33MTIjH7ewbjJi/O2EE7If3SUYUkAmeOeb1ysehk3ZnE2NpNVDlVAxhl4MPj/n4hwX9NFkXvZhlCHuWOMJ8zEYlHBgjoEeVZ0KqbMpuRQqzQLux2MVTFu7CbZPq/GdiY5XMMEQNb6DQxwuEJ7h/dJCfkMy5k1LvKTIrLBboMgysQI+pfyr63nkJB5LQ38S/ZqEDB2i1eHI/EYPl5NWw2jCRXmNCbA8tBpQZWXtEScqXc7u0bxrWnb70Im4XqK75dlP9IvBbQJh4bh4zvEYOQpgOmIq1YBIeV3SgTHifPqhiGRnG6l5Qm7jRvSxhdmaPtRfk8458BtfQdJnmoQo94zkl+IPWjNzqh4="
